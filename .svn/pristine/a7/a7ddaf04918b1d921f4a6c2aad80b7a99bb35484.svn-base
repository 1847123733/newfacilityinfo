<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
      <el-form-item label="投放地点" prop="putPointId">
<!--        <el-input-->
<!--          v-model="queryParams.putPointId"-->
<!--          placeholder="请输入详细投放地点"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
        <el-select v-model="queryParams.putPointId" filterable placeholder="请选择投放地点">
          <el-option
            v-for="item in addressList"
            :key="item.index"
            :label="item.label"
            :value="item.index">
          </el-option>
        </el-select>
      </el-form-item>
      <el-form-item label="交付时间" prop="putTime">
        <el-date-picker clearable size="small" style="width: 200px"
          v-model="queryParams.putTime"
          type="date"
          value-format="yyyy-MM-dd"
          placeholder="选择交付时间">
        </el-date-picker>
      </el-form-item>
      <el-form-item label="负责人" prop="deviceManagerId">
        <el-input
          v-model="queryParams.deviceManagerId"
          placeholder="请输入管理负责人"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>

      <el-form-item>
        <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['manage:device:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['manage:device:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['manage:device:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['manage:device:export']"
        >导出</el-button>
      </el-col>
	  <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="deviceList" @selection-change="handleSelectionChange" border >
      <el-table-column type="selection" width="55" align="center" />
      <el-table-column label="序号" align="center" type="index" width="50" />
      <el-table-column label="设备名字" align="center" prop="deviceName"  width="120" show-overflow-tooltip/>
      <el-table-column label="设备编号" align="center" prop="deviceCode" width="80" show-overflow-tooltip />
      <el-table-column label="软件版本" align="center" prop="versionCode" width="80" show-overflow-tooltip />
      <el-table-column label="产品类别" align="center" prop="productType"  width="80" show-overflow-tooltip>
        <template slot-scope="scope">
          <span>{{scope.row.productType | rounding(productTypeOptions)}}</span>
        </template>
      </el-table-column>
      <el-table-column label="型号" align="center" prop="productName" width="120" show-overflow-tooltip/>
      <el-table-column label="设备秘钥" align="center" prop="deviceSecret"  width="200" show-overflow-tooltip />
      <el-table-column label="投放地点" align="center" prop="pointName" width="200" show-overflow-tooltip/>
      <el-table-column label="交付时间" align="center" prop="putTime" width="120" show-overflow-tooltip>
        <template slot-scope="scope">
          <span>{{ parseTime(scope.row.putTime, '{y}-{m}-{d}') }}</span>
        </template>
      </el-table-column>
      <el-table-column label="负责人" align="center" prop="deviceManagerId"  show-overflow-tooltip/>
      <el-table-column label="是否可用" align="center" prop="visible" width="80" show-overflow-tooltip>
        <template slot-scope="scope">
          <el-tag type="success" v-if="scope.row.visible === '1'">正常</el-tag>
          <el-tag type="danger" v-if="scope.row.visible === '0'">禁用</el-tag>
        </template>
      </el-table-column>
      <el-table-column label="使用状态" align="center" prop="status" width="90"  show-overflow-tooltip>
        <template slot-scope="scope">
          <el-tag type="success" v-if="scope.row.status === '1'">使用</el-tag>
          <el-tag type="danger" v-if="scope.row.status === '0'">不使用</el-tag>
        </template>
      </el-table-column>
      <el-table-column label="是否在线" align="center" prop="isOnline" width="80" show-overflow-tooltip>
        <template slot-scope="scope">
          <el-tag type="success" v-if="scope.row.isOnline === '1'">在线</el-tag>
          <el-tag type="danger" v-if="scope.row.isOnline === '0'">离线</el-tag>

        </template>
      </el-table-column>
      <el-table-column label="备注" align="center" prop="remark" show-overflow-tooltip/>
      <el-table-column label="操作" align="center" width="120"  class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['manage:device:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['manage:device:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改设备信息对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="900px" append-to-body :close-on-click-modal="false">
      <el-row>
        <el-col :span="12">
          <el-form ref="form" :model="form" :rules="rules" label-width="80px">
            <el-form-item label="设备编号" prop="deviceCode">
              <el-input v-model="form.deviceCode" placeholder="请输入体检机设备编号" />
            </el-form-item>
            <el-form-item label="设备名称" prop="managementId">
              <el-input v-model="form.deviceName" placeholder="请输入设备名称" />
            </el-form-item>
            <el-form-item label="软件版本" prop="versionCode">
              <el-input v-model="form.versionCode" placeholder="请输入软件版本" />
            </el-form-item>
<!--            prop="hardwareCode"-->
            <el-form-item label="硬件版本" >
<!--              <el-input v-model="form.hardwareCode" placeholder="请输入硬件版本" />-->
                <el-select v-model="form.productType" @change="updateCity"   style="width: 114px">
                  <el-option v-for="(item,i) in arr" :key="i" :label="item.dictLabel" :value="item.dictValue"></el-option>
                </el-select>
                <el-select v-model="form.productId" @change="updateDistrict" style="width: 114px">
                  <el-option v-for="(item,i) in cityArr" :key="i" :label="item.productName" :value="item.productId"></el-option>
                </el-select>
                <el-select v-model="form.hardwareId" style="width: 114px" @change="updatehardwareId">
                  <el-option v-for="(item,i) in districtArr" :key="i" :label="item.hardwareName" :value="item.hardwareId"></el-option>
                </el-select>
            </el-form-item>


<!--            <el-form-item label="详细投放地点" prop="putPointId">-->
<!--              <el-input v-model="form.putPointId" placeholder="请输入详细投放地点" />-->
<!--            </el-form-item>-->
            <el-form-item label="备注" prop="remark">
              <el-input v-model="form.remark" type="textarea" placeholder="请输入内容"   :rows="7"/>
            </el-form-item>

          </el-form>
        </el-col>
        <el-col :span="12">
          <el-form ref="form" :model="form" :rules="rules" label-width="180px">
<!--            <el-form-item label="故障信息" prop="faultInfo">-->
<!--              <el-input v-model="form.faultInfo" type="textarea" placeholder="请输入内容" />-->
<!--            </el-form-item>-->
<!--            <el-form-item label="心跳时间" prop="heartbeat">-->
<!--              <el-date-picker clearable size="small" style="width: 200px"-->
<!--                              v-model="form.heartbeat"-->
<!--                              type="date"-->
<!--                              value-format="yyyy-MM-dd"-->
<!--                              placeholder="选择心跳时间">-->
<!--              </el-date-picker>-->
<!--            </el-form-item>-->
<!--            <el-form-item label="删除标志" prop="delFlag">-->
<!--              <el-input v-model="form.delFlag" placeholder="请输入删除标志" />-->
<!--            </el-form-item>-->
            <el-form-item label="设备秘钥" prop="deviceSecret">
              <el-input v-model="form.deviceSecret" placeholder="请输入设备秘钥" :disabled="form.deviceId !== null" />
            </el-form-item>
            <el-form-item label="详细投放地点" prop="putPointId">
              <el-select v-model="form.putPointId" filterable placeholder="请选择投放地点">
                <el-option
                  v-for="item in addressList"
                  :key="item.index"
                  :label="item.label"
                  :value="item.index">
                </el-option>
              </el-select>
            </el-form-item>
            <el-form-item label="设备交付使用时间" prop="putTime">
              <el-date-picker clearable size="small" style="width: 200px"
                              v-model="form.putTime"
                              type="date"
                              value-format="yyyy-MM-dd"
                              placeholder="选择设备交付使用时间">
              </el-date-picker>
            </el-form-item>
            <el-form-item label="设备维保期" prop="maintainTime">
              <el-date-picker clearable size="small" style="width: 200px"
                              v-model="form.maintainTime"
                              type="date"
                              value-format="yyyy-MM-dd"
                              placeholder="选择设备维保期">
              </el-date-picker>
            </el-form-item>
            <el-form-item label="设备管理负责人" prop="deviceManagerId">
              <el-input v-model="form.deviceManagerId" placeholder="请输入设备管理负责人" />
            </el-form-item>
            <el-form-item label="是否可用" prop="visible">
              <el-switch
                v-model="form.visible"
                active-color="#13ce66"
                inactive-color="#ff4949"
                active-value="1"
                inactive-value="0">
              </el-switch>
            </el-form-item>
            <!--            <el-form-item label="是否在线" prop="isOnline">-->
            <!--              <el-switch-->
            <!--                v-model="form.isOnline"-->
            <!--                active-color="#13ce66"-->
            <!--                inactive-color="#ff4949"-->
            <!--                active-value="1"-->
            <!--                inactive-value="0">-->
            <!--              </el-switch>-->
            <!--            </el-form-item>-->
            <el-form-item label="使用状态">
              <el-radio-group v-model="form.status">
                <el-radio label="1">正常</el-radio>

                <el-radio label="0">异常</el-radio>
              </el-radio-group>
            </el-form-item>
          </el-form>
        </el-col>
      </el-row>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { listDevice, getDevice, delDevice, addDevice, updateDevice, exportDevice } from "@/api/manage/device";
import { listPutpoint } from "@/api/manage/putpoint";
import { listProduct } from "@/api/manage/product";
import { listHardware } from "@/api/manage/hardware";

export default {
  name: "Device",
  data() {
    return {
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 设备信息表格数据
      deviceList: [],
      // 地点列表
      putpointList: [],
      addressList:[],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        deviceCode: null,
        versionCode: null,
        hardwareCode: null,
        managementId: null,
        useManagementId: null,
        putPointId: null,
        putTime: null,
        deviceManagerId: null,
        maintainTime: null,
        visible: null,
        status: null,
        faultInfo: null,
        heartbeat: null,
        isOnline: null,
      },
      // 表单参数
      form: {},
      // 表单校验
      rules: {
      },
      // 三级联动
      arr:[],
      cityArr:[],
      districtArr:[],
      // 产品类型数据字典
      productTypeOptions: [],
    };
  },
  filters:{
    rounding(val,productTypeOptions){
      // if (val === 'tjj'){
      //   return '自助体检机'
      // }else if (val === 'zzj'){
      //   return '制证机'
      // }
      // console.log(productTypeOptions,'产品类别1')
      if (productTypeOptions.length ===0) return
      else {
        console.log(productTypeOptions,'产品类别1')
        let newarr = productTypeOptions.filter((item,index,arr)=>{// item:循环结果 index:下标 arr:原数组
          return item.dictValue == val;//判断即可
        })
        // console.log(newarr)
        if (newarr.length == 0){
          return val
        }else {
          return newarr[0].dictLabel
        }
      }

    }
  },
  created() {
    this.getList();
    this.getddList();
    this.getDicts("tosun_product_type").then(response => {
      this.arr = response.data;
      this.productTypeOptions = response.data;
    });
  },
  computed:{},
  methods: {
    /** 查询设备信息列表 */
    getList() {
      this.loading = true;
      listDevice(this.queryParams).then(response => {
        this.deviceList = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },
    // 请求投放地点
    getddList() {
      this.loading = true;
      listPutpoint(this.queryParams).then(response => {
        this.putpointList = response.rows;
        let obj = {};
        let arr = [];
        for (let i = 0; i < this.putpointList.length; i++){
          obj={};
          obj.index =  this.putpointList[i].putPointId;
          obj.label = this.putpointList[i].pointName;
          arr.push(obj);
        }
         this.addressList = arr;
        this.loading = false;
      });
    },
    // 三级联动的 - 根据产品类别获取 产品 请求
    getlistProduct(val) {
      this.loading = true;
      listProduct({
        productType:val
      }).then(response => {
        this.cityArr = response.rows;
        console.log( this.cityArr,'根据产品类别的产品')
        this.loading = false;
      });
    },
    // 三级联动的 - 根据产品获取 产品型号 请求
    getHardwarelist(val) {
      this.loading = true;
      listHardware({
        productId:val
      }).then(response => {
        this.districtArr = response.rows;
        console.log( this.districtArr,'根据产品的产品型号')
        this.loading = false;
      });
    },

    // 三级联动  开始  切换
    updateCity(val){
      console.log(val,'一级联动')
      this.cityArr = []
      this.districtArr = []
      this.form.productId = ''
      this.form.hardwareId = ''
      this.getlistProduct(val)

    },
    updateDistrict(val){
      console.log(val,'二级联动')
      this.districtArr = []
      this.form.hardwareId = ''
      this.getHardwarelist(val)
    },
    updatehardwareId(val){
      console.log(val)
      this.form.hardwareId = val
    },
    // 三级联动  结束  切换

    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        deviceId: null,
        deviceCode: null,
        versionCode: null,
        hardwareCode: null,
        managementId: null,
        useManagementId: null,
        putPointId: null,
        putTime: null,
        deviceManagerId: null,
        maintainTime: null,
        visible: "1",
        status: "1",
        faultInfo: null,
        heartbeat: null,
        isOnline: null,
        delFlag: null,
        createBy: null,
        createTime: null,
        updateBy: null,
        updateTime: null,
        remark: null
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.deviceId)
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加设备信息";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const deviceId = row.deviceId || this.ids
      getDevice(deviceId).then(response => {
        this.form = response.data;
        this.getlistProduct(this.form.productType)
        this.getHardwarelist(this.form.productId)
        this.open = true;
        this.title = "修改设备信息";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          if (this.form.deviceId != null) {
            updateDevice(this.form).then(response => {
              this.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            addDevice(this.form).then(response => {
              this.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const deviceIds = row.deviceId || this.ids;
      this.$confirm('是否确认删除设备信息编号为"' + deviceIds + '"的数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return delDevice(deviceIds);
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        })
    },
    /** 导出按钮操作 */
    handleExport() {
      const queryParams = this.queryParams;
      this.$confirm('是否确认导出所有设备信息数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return exportDevice(queryParams);
        }).then(response => {
          this.download(response.msg);
        })
    }
  }
};
</script>
