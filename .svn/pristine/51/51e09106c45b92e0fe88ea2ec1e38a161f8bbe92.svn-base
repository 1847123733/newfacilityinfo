<template>
  <div class="app-container">
    <el-form :model="queryParams" ref="queryForm" :inline="true" v-show="showSearch" label-width="68px">
      <el-form-item label="产品名字" prop="productId">
<!--        <el-input-->
<!--          v-model="queryParams.productId"-->
<!--          placeholder="请输入产品主键"-->
<!--          clearable-->
<!--          size="small"-->
<!--          @keyup.enter.native="handleQuery"-->
<!--        />-->
        <el-select v-model="queryParams.productId" placeholder="请选择产品名字" clearable size="small">
          <el-option
            v-for="dict in productIds"
            :key="dict.index"
            :label="dict.label"
            :value="dict.index"
          />
        </el-select>
      </el-form-item>
      <el-form-item label="硬件编码" prop="hardwareCode">
        <el-input
          v-model="queryParams.hardwareCode"
          placeholder="请输入硬件编码"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item label="硬件名称" prop="hardwareName">
        <el-input
          v-model="queryParams.hardwareName"
          placeholder="请输入硬件名称"
          clearable
          size="small"
          @keyup.enter.native="handleQuery"
        />
      </el-form-item>
      <el-form-item>
        <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button
          type="primary"
          icon="el-icon-plus"
          size="mini"
          @click="handleAdd"
          v-hasPermi="['manage:hardware:add']"
        >新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="success"
          icon="el-icon-edit"
          size="mini"
          :disabled="single"
          @click="handleUpdate"
          v-hasPermi="['manage:hardware:edit']"
        >修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="danger"
          icon="el-icon-delete"
          size="mini"
          :disabled="multiple"
          @click="handleDelete"
          v-hasPermi="['manage:hardware:remove']"
        >删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button
          type="warning"
          icon="el-icon-download"
          size="mini"
          @click="handleExport"
          v-hasPermi="['manage:hardware:export']"
        >导出</el-button>
      </el-col>
	  <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <el-table v-loading="loading" :data="hardwareList" @selection-change="handleSelectionChange">
      <el-table-column type="selection" width="55" align="center" />
      <el-table-column label="序号" align="center" type="index" width="50" />
<!--      <el-table-column label="硬件版本" align="center" prop="hardwareId" />-->
<!--      <el-table-column label="产品主键" align="center" prop="productId" />-->
      <el-table-column label="产品名字" align="center" prop="productName" />
      <el-table-column label="硬件编码" align="center" prop="hardwareCode" />
      <el-table-column label="硬件名称" align="center" prop="hardwareName" />
      <el-table-column label="描述" align="center" prop="describes" />
<!--      <el-table-column label="备注" align="center" prop="remark" />-->
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="text"
            icon="el-icon-edit"
            @click="handleUpdate(scope.row)"
            v-hasPermi="['manage:hardware:edit']"
          >修改</el-button>
          <el-button
            size="mini"
            type="text"
            icon="el-icon-delete"
            @click="handleDelete(scope.row)"
            v-hasPermi="['manage:hardware:remove']"
          >删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <pagination
      v-show="total>0"
      :total="total"
      :page.sync="queryParams.pageNum"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />

    <!-- 添加或修改设备产品型号对话框 -->
    <el-dialog :title="title" :visible.sync="open" width="500px" append-to-body :close-on-click-modal="false">
      <el-form ref="form" :model="form" :rules="rules" label-width="80px">
        <el-form-item label="产品名字" prop="productId">
<!--          <el-input v-model="form.productId" placeholder="请输入产品主键" />-->
          <el-select v-model="form.productId" placeholder="请选择产品名字" clearable size="small">
            <el-option
              v-for="dict in productIds"
              :key="dict.index"
              :label="dict.label"
              :value="dict.index"
            />
          </el-select>
        </el-form-item>
        <el-form-item label="硬件编码" prop="hardwareCode">
          <el-input v-model="form.hardwareCode" placeholder="请输入硬件编码" />
        </el-form-item>
        <el-form-item label="硬件名称" prop="hardwareName">
          <el-input v-model="form.hardwareName" placeholder="请输入硬件名称" />
        </el-form-item>
        <el-form-item label="描述" prop="describes">
          <el-input v-model="form.describes" type="textarea" placeholder="请输入内容" />
        </el-form-item>
<!--        <el-form-item label="删除标志" prop="delFlag">-->
<!--          <el-input v-model="form.delFlag" placeholder="请输入删除标志" />-->
<!--        </el-form-item>-->
<!--        <el-form-item label="备注" prop="remark">-->
<!--          <el-input v-model="form.remark" type="textarea" placeholder="请输入内容" />-->
<!--        </el-form-item>-->
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { listHardware, getHardware, delHardware, addHardware, updateHardware, exportHardware } from "@/api/manage/hardware";
import { listProduct } from "@/api/manage/product";

export default {
  name: "Hardware",
  data() {
    const ids = this.$route.query.id
    return {
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 设备产品型号表格数据
      hardwareList: [],
      // 弹出层标题
      title: "",
      // 是否显示弹出层
      open: false,
      // 产品主键例表
      productIds: [],
      // 查询参数
      queryParams: {
        pageNum: 1,
        pageSize: 10,
        productId: ids,
        hardwareCode: null,
        hardwareName: null,
        describes: null,
      },
      // 表单参数
      form: {
        productId:ids
      },
      // 表单校验
      rules: {
      }
    };
  },
  created() {
    this.getList();
    this.getProductlist();
  },
  methods: {
    /** 查询设备产品型号列表 */
    getList() {
      this.loading = true;
      listHardware(this.queryParams).then(response => {
        console.log(response,'设备产品型号')
        this.hardwareList = response.rows;
        this.total = response.total;
        this.loading = false;
      });
    },
    /** 查询产品主键列表 */
    getProductlist() {
      this.loading = true;
      listProduct().then(response => {
        let obj = {
          label:null,
          index:null
        }
        for (let i =0;i<response.rows.length;i++){
          obj = {
            label:null,
            index:null
          }
          obj.label = response.rows[i].productName
          obj.index = response.rows[i].productId
          this.productIds.push(obj)
        }
        // this.productIds = response.rows;
        console.log(this.productIds,'产品例表')
        // this.total = response.total;
        this.loading = false;
      });
    },
    // 取消按钮
    cancel() {
      this.open = false;
      this.reset();
    },
    // 表单重置
    reset() {
      this.form = {
        hardwareId: null,
        productId: null,
        hardwareCode: null,
        hardwareName: null,
        describes: null,
        delFlag: null,
        createBy: null,
        createTime: null,
        updateBy: null,
        updateTime: null,
        remark: null
      };
      this.resetForm("form");
    },
    /** 搜索按钮操作 */
    handleQuery() {
      this.queryParams.pageNum = 1;
      this.getList();
    },
    /** 重置按钮操作 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    // 多选框选中数据
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.hardwareId)
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 新增按钮操作 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "添加设备产品型号";
    },
    /** 修改按钮操作 */
    handleUpdate(row) {
      this.reset();
      const hardwareId = row.hardwareId || this.ids
      getHardware(hardwareId).then(response => {
        this.form = response.data;
        this.open = true;
        this.title = "修改设备产品型号";
      });
    },
    /** 提交按钮 */
    submitForm() {
      this.$refs["form"].validate(valid => {
        if (valid) {
          if (this.form.hardwareId != null) {
            updateHardware(this.form).then(response => {
              this.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            addHardware(this.form).then(response => {
              this.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 删除按钮操作 */
    handleDelete(row) {
      const hardwareIds = row.hardwareId || this.ids;
      this.$confirm('是否确认删除设备产品型号编号为"' + hardwareIds + '"的数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return delHardware(hardwareIds);
        }).then(() => {
          this.getList();
          this.msgSuccess("删除成功");
        })
    },
    /** 导出按钮操作 */
    handleExport() {
      const queryParams = this.queryParams;
      this.$confirm('是否确认导出所有设备产品型号数据项?', "警告", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        }).then(function() {
          return exportHardware(queryParams);
        }).then(response => {
          this.download(response.msg);
        })
    }
  }
};
</script>
